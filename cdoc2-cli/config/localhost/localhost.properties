# Client configuration where keys and certificates are read from smart-card (PKCS11 configuration)
# java -jar target/cdoc2-cli-0.0.12-SNAPSHOT.jar create --server=config/localhost/localhost.properties -f /tmp/localhost_id-card.cdoc -r 37903130370 README.md

# java -jar target/cdoc2-cli-0.0.10-SNAPSHOT.jar decrypt --server=config/localhost/localhost.properties -f /tmp/localhost_id-card.cdoc -o /tmp/

cdoc2.client.server.id=localhost
# capsules created over TLS (no client auth required)
cdoc2.client.server.base-url.post=https://localhost:8443
# Querying capsules requires mTLS
cdoc2.client.server.base-url.get=https://localhost:8444
cdoc2.client.server.debug=true

# trusted certificates by client
cdoc2.client.ssl.trust-store.type=JKS
#specify trust store jks as file in classpath
#cdoc2.client.ssl.trust-store=classpath:keystore/clienttruststore.jks
#or path (full or relative)
cdoc2.client.ssl.trust-store=../cdoc2-server/keys/clienttruststore.jks
cdoc2.client.ssl.trust-store-password=passwd

# mutual TLS with cert from smart-card (EST-ID certificates are trusted by the server)
# Only required for get server
cdoc2.client.ssl.client-store.type=PKCS11
# if ssl.client-store-password.prompt is set, then ask user interactively
cdoc2.client.ssl.client-store-password.prompt=PIN1
# otherwise use password value
#cdoc2.client.ssl.client-store-password=3471

#PKCS11 library location, if not found in default location
#pkcs11-library=/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so
